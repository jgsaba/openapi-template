plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'com.template'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

swaggerSources {
	def typeMappings = 'URI=URI'
	def importMappings = 'URI=java.net.URI'
	app {
		def apiYaml = "${rootDir}/src/main/resources/api/apispec.yaml"
		def configJson = "${rootDir}/src/main/resources/api/config.json"
		inputFile = file(apiYaml)
		def ignoreFile = file("${rootDir}/src/main/resources/api/.openapi-generator-ignore")
		code {
			language = 'spring'
			configFile = file(configJson)
			rawOptions = ['--ignore-file-override', ignoreFile, '--type-mappings',
						  typeMappings, '--import-mappings', importMappings] as List<String>
			components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
			dependsOn validation
		}
	}
}

compileJava.dependsOn swaggerSources.app.code
sourceSets.main.java.srcDir "${swaggerSources.app.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.app.code.outputDir}/src/main/resources"

repositories {
	mavenCentral()
}

dependencies {
	swaggerCodegen 'org.openapitools:openapi-generator-cli:4.3.1'
	swaggerUI 'org.webjars:swagger-ui:3.52.5'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	compileOnly 'org.openapitools:jackson-databind-nullable:0.2.1'
	compileOnly 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'io.swagger:swagger-annotations:1.6.2'

	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
